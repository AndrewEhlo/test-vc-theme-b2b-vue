# v3.800.11
# bump-ubuntu-version
name: Theme Release Hotfix
on:
  workflow_dispatch:
  push:
    paths-ignore:
      #- '.github/**'
      - 'docs/**'
      - 'build/**'

    branches:
      [master, dev]

jobs:
  ci:
    runs-on: ubuntu-latest
    env: 
      # SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
      GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
      BLOB_SAS: ${{ secrets.BLOB_TOKEN }}
      VERSION_SUFFIX: ""

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Node 20
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Enable corepack
      run: |
        corepack enable

    # - name: Setup sonarqube
    #   uses: warchant/setup-sonar-scanner@v8

    - name: Install VirtoCommerce.GlobalTool
      uses: VirtoCommerce/vc-github-actions/setup-vcbuild@master
    
    - name: Setup Git Credentials
      uses: VirtoCommerce/vc-github-actions/setup-git-credentials-github@master
      with:
        githubToken: ${{ secrets.REPO_TOKEN }}
    
    - name: Increment Version
      run: |
        vc-build IncrementPatch
        git add ${{ github.workspace }}/package.json
        git commit -m "ci: Auto IncrementPatch"
        git push

    - name: Get Image Version
      uses: VirtoCommerce/vc-github-actions/get-image-version@master
      id: image

    - name: Set VERSION_SUFFIX variable
      run: |
        if [ '${{ github.event_name }}' = 'workflow_dispatch' ]; then
          echo "VERSION_SUFFIX=${{ steps.image.outputs.fullSuffix }}" >> $GITHUB_ENV
        else
          echo "VERSION_SUFFIX=${{ steps.image.outputs.suffix }}" >> $GITHUB_ENV
        fi;

    - name: Get changelog
      id: changelog
      uses: VirtoCommerce/vc-github-actions/changelog-generator@master

    # - name: SonarCloud Scan
    #   uses: VirtoCommerce/vc-github-actions/sonar-theme@master
    #   with:
    #     projectVersion: ${{ steps.image.outputs.fullVersion }}

    - name: Set VERSION
      run: |
        echo "VERSION=${{ steps.image.outputs.prefix }}${{ env.VERSION_SUFFIX && '-' || '' }}${{ env.VERSION_SUFFIX }}" >> $GITHUB_ENV
    
    - name: Update package.json Version
      run: |
        yarn version ${{ env.VERSION }}

    - name: Install dependencies
      run: |
        yarn install

    - name: Build
      run: |
        yarn build

    - name: Unit Tests
      run: |
        yarn test:unit --run

    - name: Typing Tests
      run: |
        yarn test:typing --run

    - name: Packaging
      run: |
        yarn compress

    # - name: Publish
    #   id: publish
    #   uses: VirtoCommerce/vc-github-actions/publish-theme@master
    #   with:
    #     artifactPath: ${{ steps.build.outputs.artifactPath }}
    #     artifactName: ${{ steps.build.outputs.artifactName }}
    #     blobUrl: https://testazcopy645.blob.core.windows.net/packages

    # - name: Publish to Blob
    #   id: blobRelease
    #   uses: VirtoCommerce/vc-github-actions/publish-blob-release@master
    #   with:
    #     blobSAS: ${{ secrets.BLOB_TOKEN }}
    #     blobUrl: https://testazcopy645.blob.core.windows.net/packages

    # - name: Create Release
    #   id: create_release
    #   uses: actions/create-release@v1
    #   with:
    #     tag_name: ${{ steps.image.outputs.prefix }}
    #     release_name: ${{ steps.image.outputs.prefix }}
    #     draft: false
    #     prerelease: false
    #     body: ${{ steps.changelog.outputs.changelog }}

    # - name: Upload Release Asset
    #   id: upload-release-asset
    #   uses: actions/upload-release-asset@v1
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: artifacts/${{ steps.blobRelease.outputs.blobId }}
    #     asset_name: ${{ steps.blobRelease.outputs.blobId }}
    #     asset_content_type: application/zip
    
    - name: Create GH Release
      run: |
        gh release create ${{ steps.image.outputs.shortVersion }} \
              --repo="$GITHUB_REPOSITORY" \
              --title="${GITHUB_REPOSITORY#*/} ${{ steps.image.outputs.shortVersion }}" \
              --notes=${{ steps.changelog.outputs.changelog }} \
              "artifacts/${GITHUB_REPOSITORY#*/}-${{ steps.image.outputs.shortVersion }}.zip#${GITHUB_REPOSITORY#*/}-${{ steps.image.outputs.shortVersion }}.zip"